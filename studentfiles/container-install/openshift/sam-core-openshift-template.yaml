apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: ibm-sam-core
  annotations:
    openshift.io/display-name: IBM SAM Core
    iconClass: icon-sso
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${APP_NAME}-config
    labels:
      app: ${APP_NAME}
      isamapp: ${APP_NAME}-config
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 50Mi
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APP_NAME}
      isamapp: ${APP_NAME}-config
    name: ${APP_NAME}-config
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        isamapp: ${APP_NAME}-config
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
          isamapp: ${APP_NAME}-config
      spec:
        serviceAccountName: ${SERVICE_ACCOUNT}
        securityContext:
          runAsNonRoot: true
          runAsUser:    6000
        containers:
        - env:
          - name: SERVICE
            value: config
          - name: CONTAINER_TIMEZONE
            value: ${TIMEZONE}
          - name: ADMIN_PWD
            valueFrom:
              secretKeyRef:
                key: adminpw
                name: ${ADMIN_SECRET}
          image: docker.io/store/ibmcorp/isam:${ISAM_VERSION}
          imagePullPolicy: IfNotPresent
          name: ${APP_NAME}-config
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          readinessProbe:
            tcpSocket:
              port:  9443
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 9443
            initialDelaySeconds: 120
            periodSeconds: 20
          volumeMounts:
          - mountPath: /var/shared
            name: ${APP_NAME}-config
          - mountPath: /var/application.logs
            name: ${APP_NAME}-config-logs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ${PULL_SECRET}
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${APP_NAME}-config
          persistentVolumeClaim:
            claimName: ${APP_NAME}-config
        - name: ${APP_NAME}-config-logs
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APP_NAME}
      isamapp: ${APP_NAME}-dsc1
    name: ${APP_NAME}-dsc1
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        isamapp: ${APP_NAME}-dsc1
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
          isamapp: ${APP_NAME}-dsc1
          isamaffinity: ${APP_NAME}-dsc
      spec:
        serviceAccountName: ${SERVICE_ACCOUNT}
        securityContext:
          runAsNonRoot: true
          runAsUser:    6000
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: isamaffinity
                  operator: In
                  values:
                  - ${APP_NAME}-dsc
              topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: SERVICE
            value: dsc
          - name: INSTANCE
            value: "1"
          - name: CONTAINER_TIMEZONE
            value: ${TIMEZONE}
          - name: AUTO_RELOAD_FREQUENCY
            value: "5"
          - name: CONFIG_SERVICE_URL
            value: https://${CONFIG_SERVICE}:9443/shared_volume
          - name: CONFIG_SERVICE_USER_NAME
            value: cfgsvc
          - name: CONFIG_SERVICE_USER_PWD
            valueFrom:
              secretKeyRef:
                key: cfgsvcpw
                name: ${CFGSVC_SECRET}
          image: docker.io/store/ibmcorp/isam:${ISAM_VERSION}
          imagePullPolicy: IfNotPresent
          name: ${APP_NAME}-dsc1
          ports:
          - containerPort: 443
            protocol: TCP
          - containerPort: 444
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            exec:
              command:
              - /sbin/health_check.sh
              - livenessProbe
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command:
              - /sbin/health_check.sh
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 2
          volumeMounts:
          - mountPath: /var/application.logs
            name: ${APP_NAME}-dsc1-logs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ${PULL_SECRET}
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${APP_NAME}-dsc1-logs
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APP_NAME}
      isamapp: ${APP_NAME}-dsc2
    name: ${APP_NAME}-dsc2
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        isamapp: ${APP_NAME}-dsc2
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
          isamapp: ${APP_NAME}-dsc2
          isamaffinity: ${APP_NAME}-dsc
      spec:
        serviceAccountName: ${SERVICE_ACCOUNT}
        securityContext:
          runAsNonRoot: true
          runAsUser:    6000
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: isamaffinity
                  operator: In
                  values:
                  - ${APP_NAME}-dsc
              topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: SERVICE
            value: dsc
          - name: INSTANCE
            value: "2"
          - name: CONTAINER_TIMEZONE
            value: ${TIMEZONE}
          - name: AUTO_RELOAD_FREQUENCY
            value: "5"
          - name: CONFIG_SERVICE_URL
            value: https://${CONFIG_SERVICE}:9443/shared_volume
          - name: CONFIG_SERVICE_USER_NAME
            value: cfgsvc
          - name: CONFIG_SERVICE_USER_PWD
            valueFrom:
              secretKeyRef:
                key: cfgsvcpw
                name: ${CFGSVC_SECRET}
          image: docker.io/store/ibmcorp/isam:${ISAM_VERSION}
          imagePullPolicy: IfNotPresent
          name: ${APP_NAME}-dsc2
          ports:
          - containerPort: 443
            protocol: TCP
          - containerPort: 444
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            exec:
              command:
              - /sbin/health_check.sh
              - livenessProbe
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command:
              - /sbin/health_check.sh
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 2
          volumeMounts:
          - mountPath: /var/application.logs
            name: ${APP_NAME}-dsc2-logs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ${PULL_SECRET}
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${APP_NAME}-dsc2-logs
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APP_NAME}
      isamapp: ${APP_NAME}-dsc3
    name: ${APP_NAME}-dsc3
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        isamapp: ${APP_NAME}-dsc3
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
          isamapp: ${APP_NAME}-dsc3
          isamaffinity: ${APP_NAME}-dsc
      spec:
        serviceAccountName: ${SERVICE_ACCOUNT}
        securityContext:
          runAsNonRoot: true
          runAsUser:    6000
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: isamaffinity
                  operator: In
                  values:
                  - ${APP_NAME}-dsc
              topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: SERVICE
            value: dsc
          - name: INSTANCE
            value: "3"
          - name: CONTAINER_TIMEZONE
            value: ${TIMEZONE}
          - name: AUTO_RELOAD_FREQUENCY
            value: "5"
          - name: CONFIG_SERVICE_URL
            value: https://${CONFIG_SERVICE}:9443/shared_volume
          - name: CONFIG_SERVICE_USER_NAME
            value: cfgsvc
          - name: CONFIG_SERVICE_USER_PWD
            valueFrom:
              secretKeyRef:
                key: cfgsvcpw
                name: ${CFGSVC_SECRET}
          image: docker.io/store/ibmcorp/isam:${ISAM_VERSION}
          imagePullPolicy: IfNotPresent
          name: ${APP_NAME}-dsc3
          ports:
          - containerPort: 443
            protocol: TCP
          - containerPort: 444
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            exec:
              command:
              - /sbin/health_check.sh
              - livenessProbe
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command:
              - /sbin/health_check.sh
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 2
          volumeMounts:
          - mountPath: /var/application.logs
            name: ${APP_NAME}-dsc3-logs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ${PULL_SECRET}
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${APP_NAME}-dsc3-logs
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APP_NAME}
      isamapp: ${APP_NAME}-dsc4
    name: ${APP_NAME}-dsc4
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        isamapp: ${APP_NAME}-dsc4
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
          isamapp: ${APP_NAME}-dsc4
          isamaffinity: ${APP_NAME}-dsc
      spec:
        serviceAccountName: ${SERVICE_ACCOUNT}
        securityContext:
          runAsNonRoot: true
          runAsUser:    6000
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: isamaffinity
                  operator: In
                  values:
                  - ${APP_NAME}-dsc
              topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: SERVICE
            value: dsc
          - name: INSTANCE
            value: "4"
          - name: CONTAINER_TIMEZONE
            value: ${TIMEZONE}
          - name: AUTO_RELOAD_FREQUENCY
            value: "5"
          - name: CONFIG_SERVICE_URL
            value: https://${CONFIG_SERVICE}:9443/shared_volume
          - name: CONFIG_SERVICE_USER_NAME
            value: cfgsvc
          - name: CONFIG_SERVICE_USER_PWD
            valueFrom:
              secretKeyRef:
                key: cfgsvcpw
                name: ${CFGSVC_SECRET}
          image: docker.io/store/ibmcorp/isam:${ISAM_VERSION}
          imagePullPolicy: IfNotPresent
          name: ${APP_NAME}-dsc4
          ports:
          - containerPort: 443
            protocol: TCP
          - containerPort: 444
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            exec:
              command:
              - /sbin/health_check.sh
              - livenessProbe
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command:
              - /sbin/health_check.sh
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 2
          volumeMounts:
          - mountPath: /var/application.logs
            name: ${APP_NAME}-dsc4-logs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ${PULL_SECRET}
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${APP_NAME}-dsc4-logs
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APP_NAME}
      isamapp: ${APP_NAME}-runtime
    name: ${APP_NAME}-runtime
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        isamapp: ${APP_NAME}-runtime
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
          isamapp: ${APP_NAME}-runtime
      spec:
        serviceAccountName: ${SERVICE_ACCOUNT}
        securityContext:
          runAsNonRoot: true
          runAsUser:    6000
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: isamapp
                    operator: In
                    values:
                    - ${APP_NAME}-runtime
                topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: SERVICE
            value: runtime
          - name: CONTAINER_TIMEZONE
            value: ${TIMEZONE}
          - name: AUTO_RELOAD_FREQUENCY
            value: "5"
          - name: CONFIG_SERVICE_URL
            value: https://${CONFIG_SERVICE}:9443/shared_volume
          - name: CONFIG_SERVICE_USER_NAME
            value: cfgsvc
          - name: CONFIG_SERVICE_USER_PWD
            valueFrom:
              secretKeyRef:
                key: cfgsvcpw
                name: ${CFGSVC_SECRET}
          image: docker.io/store/ibmcorp/isam:${ISAM_VERSION}
          imagePullPolicy: IfNotPresent
          name: ${APP_NAME}-runtime
          ports:
          - containerPort: 443
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            exec:
              command:
              - /sbin/health_check.sh
              - livenessProbe
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command:
              - /sbin/health_check.sh
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 2
          volumeMounts:
          - mountPath: /var/application.logs
            name: ${APP_NAME}-runtime-logs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ${PULL_SECRET}
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${APP_NAME}-runtime-logs
          emptyDir: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${CONFIG_SERVICE}
    labels:
      app: ${APP_NAME}
      isamapp: ${APP_NAME}-config
  spec:
    externalTrafficPolicy: Cluster
    ports:
    - name: ${CONFIG_SERVICE}
      port: 9443
      protocol: TCP
      targetPort: 9443
    selector:
      isamapp: ${APP_NAME}-config
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${DSC_SERVICE}
    labels:
      app: ${APP_NAME}
      isamapp: ${APP_NAME}-dsc1
  spec:
    ports:
    - name: ${DSC_SERVICE}-svc
      port: 443
      protocol: TCP
      targetPort: 443
    - name: ${DSC_SERVICE}-rep
      port: 444
      protocol: TCP
      targetPort: 444
    selector:
      isamapp: ${APP_NAME}-dsc1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${DSC_SERVICE}2
    labels:
      app: ${APP_NAME}
      isamapp: ${APP_NAME}-dsc2
  spec:
    ports:
    - name: ${DSC_SERVICE}2-svc
      port: 443
      protocol: TCP
      targetPort: 443
    - name: ${DSC_SERVICE}2-rep
      port: 444
      protocol: TCP
      targetPort: 444
    selector:
      isamapp: ${APP_NAME}-dsc2
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${DSC_SERVICE}3
    labels:
      app: ${APP_NAME}
      isamapp: ${APP_NAME}-dsc3
  spec:
    ports:
    - name: ${DSC_SERVICE}3-svc
      port: 443
      protocol: TCP
      targetPort: 443
    - name: ${DSC_SERVICE}3-rep
      port: 444
      protocol: TCP
      targetPort: 444
    selector:
      isamapp: ${APP_NAME}-dsc3
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${DSC_SERVICE}4
    labels:
      app: ${APP_NAME}
      isamapp: ${APP_NAME}-dsc4
  spec:
    ports:
    - name: ${DSC_SERVICE}4-svc
      port: 443
      protocol: TCP
      targetPort: 443
    - name: ${DSC_SERVICE}4-rep
      port: 444
      protocol: TCP
      targetPort: 444
    selector:
      isamapp: ${APP_NAME}-dsc4
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${RUNTIME_SERVICE}
    labels:
      app: ${APP_NAME}
      isamapp: ${APP_NAME}-runtime
  spec:
    ports:
    - name: ${RUNTIME_SERVICE}
      port: 443
      protocol: TCP
      targetPort: 443
    selector:
      isamapp: ${APP_NAME}-runtime
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
parameters:
  - description: Application Name
    name: APP_NAME
    value: isam
  - description: ISAM Version to be deployed
    name: ISAM_VERSION
    value: 9.0.7.0
  - description: Config Service Name
    name: CONFIG_SERVICE
    value: isamconfig
  - description: DSC Service Name
    name: DSC_SERVICE
    value: isamdsc
  - description: Runtime Service Name
    name: RUNTIME_SERVICE
    value: isamruntime
  - description: Secret for Administrator UID/PW
    name: ADMIN_SECRET
    value: samadmin
  - description: Secret for Config Service Password
    name: CFGSVC_SECRET
    value: configreader
  - description: Secret for Image Pull
    name: PULL_SECRET
    value: dockerlogin
  - description: Timezone for container
    name: TIMEZONE
    value: Europe/London
  - description: Service Account
    name: SERVICE_ACCOUNT
    value: isam
