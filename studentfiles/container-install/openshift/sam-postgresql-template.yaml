apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: ibm-sam-postgresql
  annotations:
    openshift.io/display-name: IBM SAM PostgreSQL
    iconClass: icon-sso
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${APP_NAME}-data
    labels:
      app: ${APP_NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 50Mi
- apiVersion: v1
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-database_name: '{.data[''database-name'']}'
      template.openshift.io/expose-admin_id: '{.data[''admin-id'']}'
      template.openshift.io/expose-admin_password: '{.data[''admin-password'']}'
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}
  stringData:
    database-name: ${DB_NAME}
    admin-id: ${ADMIN_ID}
    admin-password: ${ADMIN_PW}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ${APP_NAME}
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
      spec:
        serviceAccountName: ${SERVICE_ACCOUNT}
        securityContext:
          runAsNonRoot: true
          runAsUser:    70
          fsGroup:      70
        containers:
        - env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: ${APP_NAME}
                key: admin-id
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ${APP_NAME}
                key: admin-password
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: ${APP_NAME}
                key: database-name
          - name: POSTGRES_SSL_KEYDB
            value: /var/local/server.pem
          image: docker.io/ibmcom/isam-postgresql:${DB_VERSION}
          imagePullPolicy: IfNotPresent
          name: ${APP_NAME}
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: ${APP_NAME}-data
          - mountPath: /var/local
            name: ${APP_NAME}-keys
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${APP_NAME}-data
          persistentVolumeClaim:
            claimName: ${APP_NAME}-data
        - name: ${APP_NAME}-keys
          secret:
            defaultMode: 420
            secretName: ${KEY_SECRET}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}
  spec:
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      app: ${APP_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
parameters:
  - description: Application Name
    name: APP_NAME
    value: postgresql
  - description: ISAM Version to be deployed
    name: DB_VERSION
    value: 9.0.7.0
  - description: Administrator Username
    name: ADMIN_ID
    value: postgres
  - description: Administrator Password
    name: ADMIN_PW
    from: '[a-zA-Z0-9]{16}'
    generate: expression
  - description: Database Name
    name: DB_NAME
    value: isam
  - description: Secret containing keys
    name: KEY_SECRET
    value: postgresql-keys
  - description: Service Account
    name: SERVICE_ACCOUNT
    value: isam
