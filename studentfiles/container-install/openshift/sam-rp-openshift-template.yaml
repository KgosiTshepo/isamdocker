apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: ibm-sam-reverse-proxy
  annotations:
    openshift.io/display-name: IBM SAM Reverse Proxy
    iconClass: icon-sso
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: null
    generation: 1
    labels:
      app: ${CORE_APP_NAME}-${INSTANCE_NAME}
      name: ${CORE_APP_NAME}-${INSTANCE_NAME}
    name: ${CORE_APP_NAME}-${INSTANCE_NAME}
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: ${CORE_APP_NAME}-${INSTANCE_NAME}
    triggers:
      - type: ConfigChange
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: ${CORE_APP_NAME}-${INSTANCE_NAME}
          app: ${CORE_APP_NAME}-${INSTANCE_NAME}
      spec:
        serviceAccountName: ${SERVICE_ACCOUNT}
        securityContext:
          runAsNonRoot: true
          runAsUser:    6000
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - ${CORE_APP_NAME}-${INSTANCE_NAME}
                topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: SERVICE
            value: webseal
          - name: INSTANCE
            value: ${INSTANCE_NAME}
          - name: CONTAINER_TIMEZONE
            value: ${TIMEZONE}
          - name: AUTO_RELOAD_FREQUENCY
            value: ${RELOAD_INTERVAL}
          - name: CONFIG_SERVICE_URL
            valueFrom:
              secretKeyRef:
                name: ${CORE_APP_NAME}-core
                key: config-service-url
          - name: CONFIG_SERVICE_USER_NAME
            valueFrom:
              secretKeyRef:
                name: ${CORE_APP_NAME}-core
                key: config-read-username
          - name: CONFIG_SERVICE_USER_PWD
            valueFrom:
              secretKeyRef:
                name: ${CORE_APP_NAME}-core
                key: config-read-password
          image: docker.io/store/ibmcorp/isam:${ISAM_VERSION}
          imagePullPolicy: IfNotPresent
          name: ${CORE_APP_NAME}-${INSTANCE_NAME}
          ports:
          - containerPort: 443
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            exec:
              command:
              - /sbin/health_check.sh
              - livenessProbe
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command:
              - /sbin/health_check.sh
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 2
          volumeMounts:
          - mountPath: /var/application.logs
            name: ${CORE_APP_NAME}-${INSTANCE_NAME}-logs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ${PULL_SECRET}
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${CORE_APP_NAME}-${INSTANCE_NAME}-logs
          emptyDir: {}
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: ${CORE_APP_NAME}-${INSTANCE_NAME}
    labels:
      app: ${CORE_APP_NAME}-${INSTANCE_NAME}
  spec:
    host: ${DNS_NAME}
    port:
      targetPort: https
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: passthrough
    to:
      kind: Service
      name: ${SERVICE_NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${SERVICE_NAME}
    labels:
      app: ${CORE_APP_NAME}-${INSTANCE_NAME}
  spec:
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    - name: rest
      port: 9443
      protocol: TCP
      targetPort: 9443
    selector:
      app: ${CORE_APP_NAME}-${INSTANCE_NAME}
    sessionAffinity: ClientIP
    sessionAffinityConfig:
      clientIP:
        timeoutSeconds: 10800
    type: ClusterIP
  status:
    loadBalancer: {}
parameters:
  - description: ISAM Version to be deployed
    name: ISAM_VERSION
    value: 9.0.7.0_IF1
  - description: Core Application Name
    name: CORE_APP_NAME
    value: isam
  - description: Instance name
    name: INSTANCE_NAME
    value: rp1
  - description: Service Name
    name: SERVICE_NAME
    value: isamwrprp1
  - description: Fully Qualified DNS Name for Route
    name: DNS_NAME
    value: www.iamlab.ibm.com
  - description: Secret for Image Pull
    name: PULL_SECRET
    value: dockerlogin
  - description: Auto Reload Interval in seconds (0 to disable)
    name: RELOAD_INTERVAL
    value: '5'
  - description: Timezone for container
    name: TIMEZONE
    value: Europe/London
  - description: Service Account
    name: SERVICE_ACCOUNT
    value: isam
